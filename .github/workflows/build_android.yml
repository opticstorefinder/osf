# This is a basic workflow to help you get started with Actions

name: Build Android

on: [workflow_dispatch]

jobs:
  build:
    name: 🚀 Build APK
    runs-on: ubuntu-latest
    environment: 
      name: 1_DEV
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install Cordova
        run: npm install -g cordova

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install

      - name: Add Android platform
        run: cordova platform add android@latest

      - name: Add Cordova Plugins
        run: | 
          cordova plugin add cordova-plugin-device
          cordova plugin add cordova-plugin-statusbar
          cordova plugin add cordova-plugin-dialogs
          cordova plugin add cordova-plugin-file
          cordova plugin add cordova-plugin-geolocation
          cordova plugin add cordova-plugin-email
          cordova plugin add cordova-plugin-x-socialsharing
          cordova plugin add cordova-plugin-inappbrowser
          cordova plugin add cordova-plugin-ionic-keyboard --save
          cordova plugin add https://github.com/apache/cordova-plugin-camera.git
          #cordova plugin add github:havesource/cordova-plugin-push

      - name: Prepare Build
        run: cordova prepare

      - name: Build Android Dev APK
        run: cordova build android --debug

      - name: Generate the Android App Bundle
        working-directory: ./platforms/android/
        run: ./gradlew bundle

      - name: Upload dev APK
        uses: actions/upload-artifact@v1
        with:
          name: app-dev
          path: platforms/android/app/build/outputs/apk/debug/app-debug.apk
  
  
  deploy:
    name: 🎉 Deploy App
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: 1_DEV
    steps:
    
      - name: Retrieve Artifact
        uses: actions/download-artifact@v2
        with:
          name: app-dev

      - name: Read folders
        run: ls -R
          
      - name: Create folder
        run: |
          mkdir -p app
          cp -R app-debug.apk app/app-debug.apk
      - name: Upload APK to FTP
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{secrets.FTP_HOST}}
          ftp_username: ${{secrets.FTP_USER}}
          ftp_password: ${{secrets.FTP_PASSWORD}}
          local_source_dir: "app"
          dist_target_dir: ${{secrets.FTP_FOLDER}}
  
      - name: Create folder
        run: cp -R app/app-debug.apk app/app-debug-$(date +%Y%m%d-%H%M).apk

      - name: Upload APK to FTP
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.2.1
        with:
          ftp_host: ${{ secrets.FTP_HOST }}
          ftp_username: ${{secrets.FTP_USER}}
          ftp_password: ${{secrets.FTP_PASSWORD}}
          local_source_dir: "app"
          dist_target_dir: ${{secrets.FTP_FOLDER}}

  notify:
    name: ✉️ Notify Me
    needs: deploy
    runs-on: ubuntu-latest
    environment: 
      name: 2_TEST
    steps:
      - name: Display message
        run: echo "Hello World !"
      - name: test
        uses: cinotify/github-action@main
        with:
          to: ${{vars.MY_EMAIL}}
          subject: 'Building main'
          body: |
            Hello sir,
            The application (${{vars.APP_NAME}}) has been built successfully.
            Please download here -> ${{secrets.FILE_PATH}}
            Thank you
            
   
  deliver:
    name: 📢 Deliver to Customer
    needs: deploy
    runs-on: ubuntu-latest
    environment: 
      name: 3_STAGING
    steps:
      - name: Display message
        run: echo "Hello World !"
     
     
  publish:
    name: 📢 Publish to Playstore
    needs: [notify, deliver]
    runs-on: ubuntu-latest
    environment: 
      name: 4_PROD
    steps:
      - name: Display message
        run: echo "Hello World !"
  
